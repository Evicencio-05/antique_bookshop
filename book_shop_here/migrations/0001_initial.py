# Generated by Django 5.2.6 on 2025-09-28 03:50

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("author_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "last_name",
                    models.CharField(max_length=100, verbose_name="Author last name"),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=100,
                        null=True,
                        verbose_name="Author first name",
                    ),
                ),
                (
                    "birth_year",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Author birth year"
                    ),
                ),
                (
                    "death_year",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Author death year"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Author description",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GroupProfile",
            fields=[
                (
                    "group",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="profile",
                        serialize=False,
                        to="auth.group",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Role description",
                        max_length=500,
                        null=True,
                        verbose_name="description",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("book_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "legacy_id",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        verbose_name="Legacy book ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        db_index=True, max_length=500, verbose_name="Book title"
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2, max_digits=11, verbose_name="Book cost"
                    ),
                ),
                (
                    "retail_price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=11,
                        verbose_name="Suggested retail price",
                    ),
                ),
                (
                    "rating",
                    models.CharField(
                        choices=[
                            ("superb", "Superb"),
                            ("excellent", "Excellent"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("poor", "Poor"),
                            ("damaged", "Damaged"),
                            ("unrated", "Unrated"),
                        ],
                        default="unrated",
                        max_length=10,
                        verbose_name="Visible book condition",
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(
                                datetime.date(1600, 1, 1)
                            ),
                            django.core.validators.MaxValueValidator(
                                datetime.date(2099, 12, 31)
                            ),
                        ],
                        verbose_name="Publication Date",
                    ),
                ),
                (
                    "publisher",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Book publisher",
                    ),
                ),
                (
                    "edition",
                    models.CharField(
                        blank=True,
                        default="N/A",
                        max_length=50,
                        null=True,
                        verbose_name="Book edition",
                    ),
                ),
                (
                    "book_status",
                    models.CharField(
                        choices=[
                            ("sold", "Sold"),
                            ("reserved", "Reserved"),
                            ("available", "Available"),
                            ("processing", "Processing"),
                        ],
                        default="processing",
                        max_length=10,
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(
                        related_name="books",
                        to="book_shop_here.author",
                        verbose_name="Book author(s)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("customer_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Customer last name",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Customer first name",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=25,
                        null=True,
                        verbose_name="Customer phone number",
                    ),
                ),
                (
                    "mailing_address",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Customer mailing address",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(
                            ("first_name__isnull", False),
                            ("last_name__isnull", False),
                            _connector="OR",
                        ),
                        name="name_required",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("employee_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="Employee first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Employee last name"),
                ),
                (
                    "phone_number",
                    models.CharField(
                        max_length=50, verbose_name="Employee phone number"
                    ),
                ),
                (
                    "address",
                    models.CharField(max_length=200, verbose_name="Employee address"),
                ),
                (
                    "birth_date",
                    models.DateField(
                        default=datetime.date(1600, 1, 1),
                        verbose_name="Employee date of birth",
                    ),
                ),
                (
                    "hire_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Employee hire date",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(max_length=50, verbose_name="Employee zip code"),
                ),
                (
                    "state",
                    models.CharField(max_length=50, verbose_name="Employee state"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Employee email",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="auth.group",
                        verbose_name="Employee role",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Employee user",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                ("order_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "order_date",
                    models.DateField(
                        auto_now_add=True, verbose_name="Date when order was placed"
                    ),
                ),
                ("delivery_pickup_date", models.DateField(blank=True, null=True)),
                ("sale_amount", models.DecimalField(decimal_places=2, max_digits=11)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("check", "Check"),
                            ("credit", "Credit Card"),
                            ("other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "order_status",
                    models.CharField(
                        choices=[
                            ("to_ship", "To Be Shipped"),
                            ("pickup", "Customer Will Pick Up"),
                            ("shipped", "Shipped"),
                            ("picked_up", "Picked Up"),
                        ],
                        default="pickup",
                        max_length=30,
                    ),
                ),
                (
                    "books",
                    models.ManyToManyField(
                        related_name="orders", to="book_shop_here.book"
                    ),
                ),
                (
                    "customer_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="book_shop_here.customer",
                        verbose_name="Customer id for order",
                    ),
                ),
                (
                    "employee_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="book_shop_here.employee",
                        verbose_name="Employee id for order",
                    ),
                ),
            ],
        ),
    ]
