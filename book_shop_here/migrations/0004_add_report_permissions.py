# Generated by Agent Mode
from django.db import migrations


def create_report_permissions(apps, schema_editor):
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    Group = apps.get_model("auth", "Group")

    # Attach custom permissions to the Order model's content type
    ct, _ = ContentType.objects.get_or_create(app_label="book_shop_here", model="order")

    perms = [
        ("view_sales_reports", "Can view sales reports"),
        ("view_employee_sales", "Can view employee sales"),
    ]

    created_perms = []
    for codename, name in perms:
        perm, _ = Permission.objects.get_or_create(
            codename=codename, content_type=ct, defaults={"name": name}
        )
        created_perms.append(perm)

    # Assign by default to Owner and Assistant Manager roles if they exist
    target_groups = Group.objects.filter(
        name__in=["Owner", "Assistant Manager"]
    )  # base names used in migration 0002
    for g in target_groups:
        g.permissions.add(*created_perms)
        g.save()


def remove_report_permissions(apps, schema_editor):
    Permission = apps.get_model("auth", "Permission")
    ContentType = apps.get_model("contenttypes", "ContentType")
    ct, _ = ContentType.objects.get_or_create(app_label="book_shop_here", model="order")
    Permission.objects.filter(
        content_type=ct, codename__in=["view_sales_reports", "view_employee_sales"]
    ).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("book_shop_here", "0003_add_discount_amount_to_order"),
    ]

    operations = [
        migrations.RunPython(create_report_permissions, remove_report_permissions),
    ]
